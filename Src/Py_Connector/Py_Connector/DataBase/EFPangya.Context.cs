//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Py_Connector.DataBase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PangyaEntities : DbContext
    {
        public PangyaEntities()
            : base("name=PangyaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Achievement_Counter_Data> Achievement_Counter_Data { get; set; }
        public virtual DbSet<Pangya_Achievement> Pangya_Achievement { get; set; }
        public virtual DbSet<Pangya_Achievement_Counter> Pangya_Achievement_Counter { get; set; }
        public virtual DbSet<Pangya_Achievement_Quest> Pangya_Achievement_Quest { get; set; }
        public virtual DbSet<Pangya_Caddie> Pangya_Caddie { get; set; }
        public virtual DbSet<Pangya_Card> Pangya_Card { get; set; }
        public virtual DbSet<Pangya_Card_Equip> Pangya_Card_Equip { get; set; }
        public virtual DbSet<Pangya_Character> Pangya_Character { get; set; }
        public virtual DbSet<Pangya_Club_Info> Pangya_Club_Info { get; set; }
        public virtual DbSet<Pangya_Daily_Quest> Pangya_Daily_Quest { get; set; }
        public virtual DbSet<Pangya_Guild_Emblem> Pangya_Guild_Emblem { get; set; }
        public virtual DbSet<Pangya_Guild_Info> Pangya_Guild_Info { get; set; }
        public virtual DbSet<Pangya_Guild_Member> Pangya_Guild_Member { get; set; }
        public virtual DbSet<Pangya_Locker_Item> Pangya_Locker_Item { get; set; }
        public virtual DbSet<Pangya_Mail> Pangya_Mail { get; set; }
        public virtual DbSet<Pangya_Mail_Item> Pangya_Mail_Item { get; set; }
        public virtual DbSet<Pangya_Map_Statistics> Pangya_Map_Statistics { get; set; }
        public virtual DbSet<Pangya_Member> Pangya_Member { get; set; }
        public virtual DbSet<Pangya_Memorial_Log> Pangya_Memorial_Log { get; set; }
        public virtual DbSet<Pangya_Personal> Pangya_Personal { get; set; }
        public virtual DbSet<Pangya_SelfDesign> Pangya_SelfDesign { get; set; }
        public virtual DbSet<Pangya_Server> Pangya_Server { get; set; }
        public virtual DbSet<Pangya_User_Equip> Pangya_User_Equip { get; set; }
        public virtual DbSet<Pangya_User_Message> Pangya_User_Message { get; set; }
        public virtual DbSet<Pangya_Warehouse> Pangya_Warehouse { get; set; }
        public virtual DbSet<Achievement_Data> Achievement_Data { get; set; }
        public virtual DbSet<Achievement_QuestItem> Achievement_QuestItem { get; set; }
        public virtual DbSet<Achievement_QuestStuffs> Achievement_QuestStuffs { get; set; }
        public virtual DbSet<Daily_Quest> Daily_Quest { get; set; }
        public virtual DbSet<Pangya_Exception_Log> Pangya_Exception_Log { get; set; }
        public virtual DbSet<Pangya_Friend> Pangya_Friend { get; set; }
        public virtual DbSet<Pangya_Game_Macro> Pangya_Game_Macro { get; set; }
        public virtual DbSet<Pangya_Guild_Log> Pangya_Guild_Log { get; set; }
        public virtual DbSet<Pangya_Item_Daily> Pangya_Item_Daily { get; set; }
        public virtual DbSet<Pangya_Item_Daily_Log> Pangya_Item_Daily_Log { get; set; }
        public virtual DbSet<Pangya_Mascot> Pangya_Mascot { get; set; }
        public virtual DbSet<Pangya_Personal_Log> Pangya_Personal_Log { get; set; }
        public virtual DbSet<Pangya_String> Pangya_String { get; set; }
        public virtual DbSet<Pangya_Transaction_Log> Pangya_Transaction_Log { get; set; }
        public virtual DbSet<Pangya_User_MatchHistory> Pangya_User_MatchHistory { get; set; }
        public virtual DbSet<Pangya_User_Statistics> Pangya_User_Statistics { get; set; }
        public virtual DbSet<TD_ROOM_DATA> TD_ROOM_DATA { get; set; }
    
        public virtual ObjectResult<ProcAddItem_Result> ProcAddItem(Nullable<int> uID, Nullable<int> iFFTYPEID, Nullable<int> qUANTITY, Nullable<byte> iSUCC, Nullable<byte> iTEM_TYPE, Nullable<int> dAY)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iFFTYPEIDParameter = iFFTYPEID.HasValue ?
                new ObjectParameter("IFFTYPEID", iFFTYPEID) :
                new ObjectParameter("IFFTYPEID", typeof(int));
    
            var qUANTITYParameter = qUANTITY.HasValue ?
                new ObjectParameter("QUANTITY", qUANTITY) :
                new ObjectParameter("QUANTITY", typeof(int));
    
            var iSUCCParameter = iSUCC.HasValue ?
                new ObjectParameter("ISUCC", iSUCC) :
                new ObjectParameter("ISUCC", typeof(byte));
    
            var iTEM_TYPEParameter = iTEM_TYPE.HasValue ?
                new ObjectParameter("ITEM_TYPE", iTEM_TYPE) :
                new ObjectParameter("ITEM_TYPE", typeof(byte));
    
            var dAYParameter = dAY.HasValue ?
                new ObjectParameter("DAY", dAY) :
                new ObjectParameter("DAY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcAddItem_Result>("ProcAddItem", uIDParameter, iFFTYPEIDParameter, qUANTITYParameter, iSUCCParameter, iTEM_TYPEParameter, dAYParameter);
        }
    
        public virtual int ProcAddItemTutorial(Nullable<int> uID, Nullable<int> cODE, Nullable<int> oPT)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var cODEParameter = cODE.HasValue ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(int));
    
            var oPTParameter = oPT.HasValue ?
                new ObjectParameter("OPT", oPT) :
                new ObjectParameter("OPT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcAddItemTutorial", uIDParameter, cODEParameter, oPTParameter);
        }
    
        public virtual ObjectResult<ProcAddRent_Result> ProcAddRent(Nullable<int> uID, Nullable<int> tYPEID, Nullable<int> dAY_IN)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var tYPEIDParameter = tYPEID.HasValue ?
                new ObjectParameter("TYPEID", tYPEID) :
                new ObjectParameter("TYPEID", typeof(int));
    
            var dAY_INParameter = dAY_IN.HasValue ?
                new ObjectParameter("DAY_IN", dAY_IN) :
                new ObjectParameter("DAY_IN", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcAddRent_Result>("ProcAddRent", uIDParameter, tYPEIDParameter, dAY_INParameter);
        }
    
        public virtual int ProcAddUserMessage(Nullable<int> from_uid, Nullable<int> uid_to, string msg_in)
        {
            var from_uidParameter = from_uid.HasValue ?
                new ObjectParameter("from_uid", from_uid) :
                new ObjectParameter("from_uid", typeof(int));
    
            var uid_toParameter = uid_to.HasValue ?
                new ObjectParameter("uid_to", uid_to) :
                new ObjectParameter("uid_to", typeof(int));
    
            var msg_inParameter = msg_in != null ?
                new ObjectParameter("msg_in", msg_in) :
                new ObjectParameter("msg_in", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcAddUserMessage", from_uidParameter, uid_toParameter, msg_inParameter);
        }
    
        public virtual ObjectResult<string> ProcAlterAchievement(Nullable<int> uID, Nullable<int> achievementTypeID, Nullable<int> quantity)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var achievementTypeIDParameter = achievementTypeID.HasValue ?
                new ObjectParameter("AchievementTypeID", achievementTypeID) :
                new ObjectParameter("AchievementTypeID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProcAlterAchievement", uIDParameter, achievementTypeIDParameter, quantityParameter);
        }
    
        public virtual ObjectResult<ProcAlterDaily_Result> ProcAlterDaily(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcAlterDaily_Result>("ProcAlterDaily", uIDParameter);
        }
    
        public virtual ObjectResult<ProcCheckUsername_Result> ProcCheckUsername(string uSERNAME)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcCheckUsername_Result>("ProcCheckUsername", uSERNAMEParameter);
        }
    
        public virtual int ProcCreateAchievement(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcCreateAchievement", uIDParameter);
        }
    
        public virtual int ProcDeleteRentItem(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcDeleteRentItem", uIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProcDelMail(Nullable<int> uID, Nullable<int> mailIndex)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var mailIndexParameter = mailIndex.HasValue ?
                new ObjectParameter("MailIndex", mailIndex) :
                new ObjectParameter("MailIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProcDelMail", uIDParameter, mailIndexParameter);
        }
    
        public virtual int ProcFixPartsCharacter(Nullable<int> uID, Nullable<int> cHARTYPE, Nullable<byte> hairs)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var cHARTYPEParameter = cHARTYPE.HasValue ?
                new ObjectParameter("CHARTYPE", cHARTYPE) :
                new ObjectParameter("CHARTYPE", typeof(int));
    
            var hairsParameter = hairs.HasValue ?
                new ObjectParameter("Hairs", hairs) :
                new ObjectParameter("Hairs", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcFixPartsCharacter", uIDParameter, cHARTYPEParameter, hairsParameter);
        }
    
        public virtual ObjectResult<ProcGet_UserInfo_Result> ProcGet_UserInfo(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGet_UserInfo_Result>("ProcGet_UserInfo", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetAchievement_Result> ProcGetAchievement(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetAchievement_Result>("ProcGetAchievement", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetCaddies_Result> ProcGetCaddies(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetCaddies_Result>("ProcGetCaddies", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetCard_Result> ProcGetCard(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetCard_Result>("ProcGetCard", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetCardEquip_Result> ProcGetCardEquip(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetCardEquip_Result>("ProcGetCardEquip", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetCharacter_Result> ProcGetCharacter(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetCharacter_Result>("ProcGetCharacter", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetGameServer_Result> ProcGetGameServer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetGameServer_Result>("ProcGetGameServer");
        }
    
        public virtual ObjectResult<ProcGetItemWarehouse_Result> ProcGetItemWarehouse(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetItemWarehouse_Result>("ProcGetItemWarehouse", uIDParameter);
        }
    
        public virtual int ProcGetLockerItem(Nullable<int> uID, Nullable<int> pAGE, Nullable<int> pAGE_TOTAL)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var pAGEParameter = pAGE.HasValue ?
                new ObjectParameter("PAGE", pAGE) :
                new ObjectParameter("PAGE", typeof(int));
    
            var pAGE_TOTALParameter = pAGE_TOTAL.HasValue ?
                new ObjectParameter("PAGE_TOTAL", pAGE_TOTAL) :
                new ObjectParameter("PAGE_TOTAL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcGetLockerItem", uIDParameter, pAGEParameter, pAGE_TOTALParameter);
        }
    
        public virtual ObjectResult<ProcGetMacro_Result> ProcGetMacro(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetMacro_Result>("ProcGetMacro", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetMail_Result> ProcGetMail(Nullable<int> uID, Nullable<int> pAGE, Nullable<int> tOTAL, Nullable<byte> rEAD)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var pAGEParameter = pAGE.HasValue ?
                new ObjectParameter("PAGE", pAGE) :
                new ObjectParameter("PAGE", typeof(int));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(int));
    
            var rEADParameter = rEAD.HasValue ?
                new ObjectParameter("READ", rEAD) :
                new ObjectParameter("READ", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetMail_Result>("ProcGetMail", uIDParameter, pAGEParameter, tOTALParameter, rEADParameter);
        }
    
        public virtual ObjectResult<ProcGetMapStatistics_Result> ProcGetMapStatistics(Nullable<int> uID, Nullable<int> mAP, Nullable<int> aSSIST)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var mAPParameter = mAP.HasValue ?
                new ObjectParameter("MAP", mAP) :
                new ObjectParameter("MAP", typeof(int));
    
            var aSSISTParameter = aSSIST.HasValue ?
                new ObjectParameter("ASSIST", aSSIST) :
                new ObjectParameter("ASSIST", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetMapStatistics_Result>("ProcGetMapStatistics", uIDParameter, mAPParameter, aSSISTParameter);
        }
    
        public virtual ObjectResult<ProcGetMascot_Result> ProcGetMascot(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetMascot_Result>("ProcGetMascot", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetMatchHistory_Result> ProcGetMatchHistory(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetMatchHistory_Result>("ProcGetMatchHistory", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetMessengerServer_Result> ProcGetMessengerServer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetMessengerServer_Result>("ProcGetMessengerServer");
        }
    
        public virtual ObjectResult<ProcGetRoomData_Result> ProcGetRoomData(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetRoomData_Result>("ProcGetRoomData", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetStatistic_Result> ProcGetStatistic(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetStatistic_Result>("ProcGetStatistic", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetToolbar_Result> ProcGetToolbar(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetToolbar_Result>("ProcGetToolbar", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetTutorial_Result> ProcGetTutorial(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetTutorial_Result>("ProcGetTutorial", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGetUCCData_Result> ProcGetUCCData(Nullable<int> uCC_INDEX)
        {
            var uCC_INDEXParameter = uCC_INDEX.HasValue ?
                new ObjectParameter("UCC_INDEX", uCC_INDEX) :
                new ObjectParameter("UCC_INDEX", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetUCCData_Result>("ProcGetUCCData", uCC_INDEXParameter);
        }
    
        public virtual ObjectResult<ProcGetUserMessage_Result> ProcGetUserMessage(Nullable<int> iDUSER)
        {
            var iDUSERParameter = iDUSER.HasValue ?
                new ObjectParameter("IDUSER", iDUSER) :
                new ObjectParameter("IDUSER", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetUserMessage_Result>("ProcGetUserMessage", iDUSERParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProcGuildGetData(Nullable<int> gUILDID, Nullable<int> pAGE, Nullable<int> tOTAL)
        {
            var gUILDIDParameter = gUILDID.HasValue ?
                new ObjectParameter("GUILDID", gUILDID) :
                new ObjectParameter("GUILDID", typeof(int));
    
            var pAGEParameter = pAGE.HasValue ?
                new ObjectParameter("PAGE", pAGE) :
                new ObjectParameter("PAGE", typeof(int));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProcGuildGetData", gUILDIDParameter, pAGEParameter, tOTALParameter);
        }
    
        public virtual ObjectResult<ProcGuildGetList_Result> ProcGuildGetList(Nullable<int> pAGE, Nullable<int> tOTAL, string sEARCH)
        {
            var pAGEParameter = pAGE.HasValue ?
                new ObjectParameter("PAGE", pAGE) :
                new ObjectParameter("PAGE", typeof(int));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(int));
    
            var sEARCHParameter = sEARCH != null ?
                new ObjectParameter("SEARCH", sEARCH) :
                new ObjectParameter("SEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGuildGetList_Result>("ProcGuildGetList", pAGEParameter, tOTALParameter, sEARCHParameter);
        }
    
        public virtual ObjectResult<ProcGuildGetLog_Result> ProcGuildGetLog(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGuildGetLog_Result>("ProcGuildGetLog", uIDParameter);
        }
    
        public virtual ObjectResult<ProcGuildGetPlayerData_Result> ProcGuildGetPlayerData(Nullable<int> uID, Nullable<int> gUILDID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gUILDIDParameter = gUILDID.HasValue ?
                new ObjectParameter("GUILDID", gUILDID) :
                new ObjectParameter("GUILDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGuildGetPlayerData_Result>("ProcGuildGetPlayerData", uIDParameter, gUILDIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProcGuildNameAvailable(string gUILDNAME)
        {
            var gUILDNAMEParameter = gUILDNAME != null ?
                new ObjectParameter("GUILDNAME", gUILDNAME) :
                new ObjectParameter("GUILDNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProcGuildNameAvailable", gUILDNAMEParameter);
        }
    
        public virtual int ProcInsertDailyQuest(Nullable<int> iN_UID, Nullable<int> qUESTID, Nullable<int> dAILYQUEST)
        {
            var iN_UIDParameter = iN_UID.HasValue ?
                new ObjectParameter("IN_UID", iN_UID) :
                new ObjectParameter("IN_UID", typeof(int));
    
            var qUESTIDParameter = qUESTID.HasValue ?
                new ObjectParameter("QUESTID", qUESTID) :
                new ObjectParameter("QUESTID", typeof(int));
    
            var dAILYQUESTParameter = dAILYQUEST.HasValue ?
                new ObjectParameter("DAILYQUEST", dAILYQUEST) :
                new ObjectParameter("DAILYQUEST", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcInsertDailyQuest", iN_UIDParameter, qUESTIDParameter, dAILYQUESTParameter);
        }
    
        public virtual int ProcInsertMail(Nullable<int> uID, string sENDER_MAIL, string sENDER_MSG_MAIL, Nullable<int> iTEM_TYPEID, Nullable<int> iTEM_SETTYPEID, Nullable<int> iTEM_QUANTITY, Nullable<int> iTEM_DAY)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var sENDER_MAILParameter = sENDER_MAIL != null ?
                new ObjectParameter("SENDER_MAIL", sENDER_MAIL) :
                new ObjectParameter("SENDER_MAIL", typeof(string));
    
            var sENDER_MSG_MAILParameter = sENDER_MSG_MAIL != null ?
                new ObjectParameter("SENDER_MSG_MAIL", sENDER_MSG_MAIL) :
                new ObjectParameter("SENDER_MSG_MAIL", typeof(string));
    
            var iTEM_TYPEIDParameter = iTEM_TYPEID.HasValue ?
                new ObjectParameter("ITEM_TYPEID", iTEM_TYPEID) :
                new ObjectParameter("ITEM_TYPEID", typeof(int));
    
            var iTEM_SETTYPEIDParameter = iTEM_SETTYPEID.HasValue ?
                new ObjectParameter("ITEM_SETTYPEID", iTEM_SETTYPEID) :
                new ObjectParameter("ITEM_SETTYPEID", typeof(int));
    
            var iTEM_QUANTITYParameter = iTEM_QUANTITY.HasValue ?
                new ObjectParameter("ITEM_QUANTITY", iTEM_QUANTITY) :
                new ObjectParameter("ITEM_QUANTITY", typeof(int));
    
            var iTEM_DAYParameter = iTEM_DAY.HasValue ?
                new ObjectParameter("ITEM_DAY", iTEM_DAY) :
                new ObjectParameter("ITEM_DAY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcInsertMail", uIDParameter, sENDER_MAILParameter, sENDER_MSG_MAILParameter, iTEM_TYPEIDParameter, iTEM_SETTYPEIDParameter, iTEM_QUANTITYParameter, iTEM_DAYParameter);
        }
    
        public virtual int ProcLogMemorial(Nullable<int> uID, string itemName, Nullable<int> quantity)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcLogMemorial", uIDParameter, itemNameParameter, quantityParameter);
        }
    
        public virtual ObjectResult<string> ProcMailInsert(Nullable<int> uID, string sENDER_MAIL, string sENDER_MSG_MAIL, string jSONData)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var sENDER_MAILParameter = sENDER_MAIL != null ?
                new ObjectParameter("SENDER_MAIL", sENDER_MAIL) :
                new ObjectParameter("SENDER_MAIL", typeof(string));
    
            var sENDER_MSG_MAILParameter = sENDER_MSG_MAIL != null ?
                new ObjectParameter("SENDER_MSG_MAIL", sENDER_MSG_MAIL) :
                new ObjectParameter("SENDER_MSG_MAIL", typeof(string));
    
            var jSONDataParameter = jSONData != null ?
                new ObjectParameter("JSONData", jSONData) :
                new ObjectParameter("JSONData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProcMailInsert", uIDParameter, sENDER_MAILParameter, sENDER_MSG_MAILParameter, jSONDataParameter);
        }
    
        public virtual ObjectResult<ProcMailItem_Result> ProcMailItem(Nullable<int> uID, Nullable<int> mail_Index)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var mail_IndexParameter = mail_Index.HasValue ?
                new ObjectParameter("Mail_Index", mail_Index) :
                new ObjectParameter("Mail_Index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcMailItem_Result>("ProcMailItem", uIDParameter, mail_IndexParameter);
        }
    
        public virtual ObjectResult<ProcReadMail_Result> ProcReadMail(Nullable<int> uID, Nullable<int> mail_Index)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var mail_IndexParameter = mail_Index.HasValue ?
                new ObjectParameter("Mail_Index", mail_Index) :
                new ObjectParameter("Mail_Index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcReadMail_Result>("ProcReadMail", uIDParameter, mail_IndexParameter);
        }
    
        public virtual int ProcSaveCaddies(Nullable<int> uID, string jSONData)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var jSONDataParameter = jSONData != null ?
                new ObjectParameter("JSONData", jSONData) :
                new ObjectParameter("JSONData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveCaddies", uIDParameter, jSONDataParameter);
        }
    
        public virtual int ProcSaveCard(Nullable<int> uID, string jSONData)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var jSONDataParameter = jSONData != null ?
                new ObjectParameter("JSONData", jSONData) :
                new ObjectParameter("JSONData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveCard", uIDParameter, jSONDataParameter);
        }
    
        public virtual int ProcSaveCardEquip(Nullable<int> uID, string jSData)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var jSDataParameter = jSData != null ?
                new ObjectParameter("JSData", jSData) :
                new ObjectParameter("JSData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveCardEquip", uIDParameter, jSDataParameter);
        }
    
        public virtual int ProcSaveCharacter(Nullable<int> uID, string jSONData)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var jSONDataParameter = jSONData != null ?
                new ObjectParameter("JSONData", jSONData) :
                new ObjectParameter("JSONData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveCharacter", uIDParameter, jSONDataParameter);
        }
    
        public virtual int ProcSaveExceptionLog(Nullable<int> uID, string uSER, string eXCEPTIONMESSAGE, string sERVER)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var uSERParameter = uSER != null ?
                new ObjectParameter("USER", uSER) :
                new ObjectParameter("USER", typeof(string));
    
            var eXCEPTIONMESSAGEParameter = eXCEPTIONMESSAGE != null ?
                new ObjectParameter("EXCEPTIONMESSAGE", eXCEPTIONMESSAGE) :
                new ObjectParameter("EXCEPTIONMESSAGE", typeof(string));
    
            var sERVERParameter = sERVER != null ?
                new ObjectParameter("SERVER", sERVER) :
                new ObjectParameter("SERVER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveExceptionLog", uIDParameter, uSERParameter, eXCEPTIONMESSAGEParameter, sERVERParameter);
        }
    
        public virtual int ProcSaveItem(Nullable<int> uID, string jSONData)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var jSONDataParameter = jSONData != null ?
                new ObjectParameter("JSONData", jSONData) :
                new ObjectParameter("JSONData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveItem", uIDParameter, jSONDataParameter);
        }
    
        public virtual int ProcSaveMacro(Nullable<int> uID, string macro1, string macro2, string macro3, string macro4, string macro5, string macro6, string macro7, string macro8, string macro9, string macro10)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var macro1Parameter = macro1 != null ?
                new ObjectParameter("Macro1", macro1) :
                new ObjectParameter("Macro1", typeof(string));
    
            var macro2Parameter = macro2 != null ?
                new ObjectParameter("Macro2", macro2) :
                new ObjectParameter("Macro2", typeof(string));
    
            var macro3Parameter = macro3 != null ?
                new ObjectParameter("Macro3", macro3) :
                new ObjectParameter("Macro3", typeof(string));
    
            var macro4Parameter = macro4 != null ?
                new ObjectParameter("Macro4", macro4) :
                new ObjectParameter("Macro4", typeof(string));
    
            var macro5Parameter = macro5 != null ?
                new ObjectParameter("Macro5", macro5) :
                new ObjectParameter("Macro5", typeof(string));
    
            var macro6Parameter = macro6 != null ?
                new ObjectParameter("Macro6", macro6) :
                new ObjectParameter("Macro6", typeof(string));
    
            var macro7Parameter = macro7 != null ?
                new ObjectParameter("Macro7", macro7) :
                new ObjectParameter("Macro7", typeof(string));
    
            var macro8Parameter = macro8 != null ?
                new ObjectParameter("Macro8", macro8) :
                new ObjectParameter("Macro8", typeof(string));
    
            var macro9Parameter = macro9 != null ?
                new ObjectParameter("Macro9", macro9) :
                new ObjectParameter("Macro9", typeof(string));
    
            var macro10Parameter = macro10 != null ?
                new ObjectParameter("Macro10", macro10) :
                new ObjectParameter("Macro10", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveMacro", uIDParameter, macro1Parameter, macro2Parameter, macro3Parameter, macro4Parameter, macro5Parameter, macro6Parameter, macro7Parameter, macro8Parameter, macro9Parameter, macro10Parameter);
        }
    
        public virtual int ProcSavePersonalLog(Nullable<int> uID, Nullable<byte> pROCESS, Nullable<long> aMOUNT)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var pROCESSParameter = pROCESS.HasValue ?
                new ObjectParameter("PROCESS", pROCESS) :
                new ObjectParameter("PROCESS", typeof(byte));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSavePersonalLog", uIDParameter, pROCESSParameter, aMOUNTParameter);
        }
    
        public virtual int ProcSaveToolbar(Nullable<int> uID, string jSONData)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var jSONDataParameter = jSONData != null ?
                new ObjectParameter("JSONData", jSONData) :
                new ObjectParameter("JSONData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveToolbar", uIDParameter, jSONDataParameter);
        }
    
        public virtual int ProcSaveUCC(Nullable<int> uID, Nullable<int> uCC_ITEMID, string uCC_NAME, Nullable<short> uCC_STATUS, Nullable<int> uCC_DRAWER_UID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var uCC_ITEMIDParameter = uCC_ITEMID.HasValue ?
                new ObjectParameter("UCC_ITEMID", uCC_ITEMID) :
                new ObjectParameter("UCC_ITEMID", typeof(int));
    
            var uCC_NAMEParameter = uCC_NAME != null ?
                new ObjectParameter("UCC_NAME", uCC_NAME) :
                new ObjectParameter("UCC_NAME", typeof(string));
    
            var uCC_STATUSParameter = uCC_STATUS.HasValue ?
                new ObjectParameter("UCC_STATUS", uCC_STATUS) :
                new ObjectParameter("UCC_STATUS", typeof(short));
    
            var uCC_DRAWER_UIDParameter = uCC_DRAWER_UID.HasValue ?
                new ObjectParameter("UCC_DRAWER_UID", uCC_DRAWER_UID) :
                new ObjectParameter("UCC_DRAWER_UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcSaveUCC", uIDParameter, uCC_ITEMIDParameter, uCC_NAMEParameter, uCC_STATUSParameter, uCC_DRAWER_UIDParameter);
        }
    
        public virtual ObjectResult<ProcSaveUCCCopy_Result> ProcSaveUCCCopy(Nullable<int> uID, Nullable<int> tYPEID, string uCC_UNIQUE, Nullable<int> uCC_IDX)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var tYPEIDParameter = tYPEID.HasValue ?
                new ObjectParameter("TYPEID", tYPEID) :
                new ObjectParameter("TYPEID", typeof(int));
    
            var uCC_UNIQUEParameter = uCC_UNIQUE != null ?
                new ObjectParameter("UCC_UNIQUE", uCC_UNIQUE) :
                new ObjectParameter("UCC_UNIQUE", typeof(string));
    
            var uCC_IDXParameter = uCC_IDX.HasValue ?
                new ObjectParameter("UCC_IDX", uCC_IDX) :
                new ObjectParameter("UCC_IDX", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcSaveUCCCopy_Result>("ProcSaveUCCCopy", uIDParameter, tYPEIDParameter, uCC_UNIQUEParameter, uCC_IDXParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProcSetLockerPwd(Nullable<int> uID, string pWD)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var pWDParameter = pWD != null ?
                new ObjectParameter("PWD", pWD) :
                new ObjectParameter("PWD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProcSetLockerPwd", uIDParameter, pWDParameter);
        }
    
        public virtual ObjectResult<string> ProcTutorialEvent(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProcTutorialEvent", uIDParameter);
        }
    
        public virtual ObjectResult<string> ProcTutorialSet(Nullable<int> uID, Nullable<int> tIPO, Nullable<int> vALOR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var tIPOParameter = tIPO.HasValue ?
                new ObjectParameter("TIPO", tIPO) :
                new ObjectParameter("TIPO", typeof(int));
    
            var vALORParameter = vALOR.HasValue ?
                new ObjectParameter("VALOR", vALOR) :
                new ObjectParameter("VALOR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProcTutorialSet", uIDParameter, tIPOParameter, vALORParameter);
        }
    
        public virtual ObjectResult<string> ProcUpdateAuth(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProcUpdateAuth", uIDParameter);
        }
    
        public virtual int ProcUpdateMail(Nullable<int> uID, Nullable<int> mailIndex, Nullable<int> itemTypeID, Nullable<int> itemAddedIndex)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var mailIndexParameter = mailIndex.HasValue ?
                new ObjectParameter("MailIndex", mailIndex) :
                new ObjectParameter("MailIndex", typeof(int));
    
            var itemTypeIDParameter = itemTypeID.HasValue ?
                new ObjectParameter("ItemTypeID", itemTypeID) :
                new ObjectParameter("ItemTypeID", typeof(int));
    
            var itemAddedIndexParameter = itemAddedIndex.HasValue ?
                new ObjectParameter("ItemAddedIndex", itemAddedIndex) :
                new ObjectParameter("ItemAddedIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateMail", uIDParameter, mailIndexParameter, itemTypeIDParameter, itemAddedIndexParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProcUpdateMapStatistics(Nullable<int> uID, Nullable<short> mAP, Nullable<int> dRIVE, Nullable<int> pUTT, Nullable<int> hOLE, Nullable<int> fAIRWAY, Nullable<int> hOLEIN, Nullable<int> pUTTIN, Nullable<int> sCORE_IN, Nullable<int> mAXPANG, Nullable<int> cHARTYPEID, Nullable<int> aSSIST, Nullable<int> eVENTSCORE)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var mAPParameter = mAP.HasValue ?
                new ObjectParameter("MAP", mAP) :
                new ObjectParameter("MAP", typeof(short));
    
            var dRIVEParameter = dRIVE.HasValue ?
                new ObjectParameter("DRIVE", dRIVE) :
                new ObjectParameter("DRIVE", typeof(int));
    
            var pUTTParameter = pUTT.HasValue ?
                new ObjectParameter("PUTT", pUTT) :
                new ObjectParameter("PUTT", typeof(int));
    
            var hOLEParameter = hOLE.HasValue ?
                new ObjectParameter("HOLE", hOLE) :
                new ObjectParameter("HOLE", typeof(int));
    
            var fAIRWAYParameter = fAIRWAY.HasValue ?
                new ObjectParameter("FAIRWAY", fAIRWAY) :
                new ObjectParameter("FAIRWAY", typeof(int));
    
            var hOLEINParameter = hOLEIN.HasValue ?
                new ObjectParameter("HOLEIN", hOLEIN) :
                new ObjectParameter("HOLEIN", typeof(int));
    
            var pUTTINParameter = pUTTIN.HasValue ?
                new ObjectParameter("PUTTIN", pUTTIN) :
                new ObjectParameter("PUTTIN", typeof(int));
    
            var sCORE_INParameter = sCORE_IN.HasValue ?
                new ObjectParameter("SCORE_IN", sCORE_IN) :
                new ObjectParameter("SCORE_IN", typeof(int));
    
            var mAXPANGParameter = mAXPANG.HasValue ?
                new ObjectParameter("MAXPANG", mAXPANG) :
                new ObjectParameter("MAXPANG", typeof(int));
    
            var cHARTYPEIDParameter = cHARTYPEID.HasValue ?
                new ObjectParameter("CHARTYPEID", cHARTYPEID) :
                new ObjectParameter("CHARTYPEID", typeof(int));
    
            var aSSISTParameter = aSSIST.HasValue ?
                new ObjectParameter("ASSIST", aSSIST) :
                new ObjectParameter("ASSIST", typeof(int));
    
            var eVENTSCOREParameter = eVENTSCORE.HasValue ?
                new ObjectParameter("EVENTSCORE", eVENTSCORE) :
                new ObjectParameter("EVENTSCORE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProcUpdateMapStatistics", uIDParameter, mAPParameter, dRIVEParameter, pUTTParameter, hOLEParameter, fAIRWAYParameter, hOLEINParameter, pUTTINParameter, sCORE_INParameter, mAXPANGParameter, cHARTYPEIDParameter, aSSISTParameter, eVENTSCOREParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProcUpdateNickname(Nullable<int> uID, string nICKNAME)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var nICKNAMEParameter = nICKNAME != null ?
                new ObjectParameter("NICKNAME", nICKNAME) :
                new ObjectParameter("NICKNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProcUpdateNickname", uIDParameter, nICKNAMEParameter);
        }
    
        public virtual ObjectResult<USP_ADD_CARD_EQUIP_Result> USP_ADD_CARD_EQUIP(Nullable<int> uID, Nullable<int> cID, Nullable<int> cHARTYPEID, Nullable<int> cARDTYPEID, Nullable<byte> sLOT, Nullable<byte> fLAG, Nullable<byte> tIME)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var cHARTYPEIDParameter = cHARTYPEID.HasValue ?
                new ObjectParameter("CHARTYPEID", cHARTYPEID) :
                new ObjectParameter("CHARTYPEID", typeof(int));
    
            var cARDTYPEIDParameter = cARDTYPEID.HasValue ?
                new ObjectParameter("CARDTYPEID", cARDTYPEID) :
                new ObjectParameter("CARDTYPEID", typeof(int));
    
            var sLOTParameter = sLOT.HasValue ?
                new ObjectParameter("SLOT", sLOT) :
                new ObjectParameter("SLOT", typeof(byte));
    
            var fLAGParameter = fLAG.HasValue ?
                new ObjectParameter("FLAG", fLAG) :
                new ObjectParameter("FLAG", typeof(byte));
    
            var tIMEParameter = tIME.HasValue ?
                new ObjectParameter("TIME", tIME) :
                new ObjectParameter("TIME", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ADD_CARD_EQUIP_Result>("USP_ADD_CARD_EQUIP", uIDParameter, cIDParameter, cHARTYPEIDParameter, cARDTYPEIDParameter, sLOTParameter, fLAGParameter, tIMEParameter);
        }
    
        public virtual ObjectResult<USP_DAILYQUEST_ACCEPT_Result> USP_DAILYQUEST_ACCEPT(Nullable<int> uID, string qUESTSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var qUESTSTRParameter = qUESTSTR != null ?
                new ObjectParameter("QUESTSTR", qUESTSTR) :
                new ObjectParameter("QUESTSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DAILYQUEST_ACCEPT_Result>("USP_DAILYQUEST_ACCEPT", uIDParameter, qUESTSTRParameter);
        }
    
        public virtual ObjectResult<USP_DAILYQUEST_LOAD_Result> USP_DAILYQUEST_LOAD(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DAILYQUEST_LOAD_Result>("USP_DAILYQUEST_LOAD", uIDParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> USP_FIRST_CREATION(Nullable<int> uID, Nullable<int> cHAR_TYPEID, Nullable<byte> hAIRCOLOUR, string nICKNAME)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var cHAR_TYPEIDParameter = cHAR_TYPEID.HasValue ?
                new ObjectParameter("CHAR_TYPEID", cHAR_TYPEID) :
                new ObjectParameter("CHAR_TYPEID", typeof(int));
    
            var hAIRCOLOURParameter = hAIRCOLOUR.HasValue ?
                new ObjectParameter("HAIRCOLOUR", hAIRCOLOUR) :
                new ObjectParameter("HAIRCOLOUR", typeof(byte));
    
            var nICKNAMEParameter = nICKNAME != null ?
                new ObjectParameter("NICKNAME", nICKNAME) :
                new ObjectParameter("NICKNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("USP_FIRST_CREATION", uIDParameter, cHAR_TYPEIDParameter, hAIRCOLOURParameter, nICKNAMEParameter);
        }
    
        public virtual ObjectResult<USP_GAME_LOGIN_Result> USP_GAME_LOGIN(string uSERID, Nullable<int> uID, string code1, string code2)
        {
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var code1Parameter = code1 != null ?
                new ObjectParameter("Code1", code1) :
                new ObjectParameter("Code1", typeof(string));
    
            var code2Parameter = code2 != null ?
                new ObjectParameter("Code2", code2) :
                new ObjectParameter("Code2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GAME_LOGIN_Result>("USP_GAME_LOGIN", uSERIDParameter, uIDParameter, code1Parameter, code2Parameter);
        }
    
        public virtual int USP_GAME_LOGOUT(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GAME_LOGOUT", uIDParameter);
        }
    
        public virtual ObjectResult<USP_GET_ACHIEVEMENT_Result> USP_GET_ACHIEVEMENT(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ACHIEVEMENT_Result>("USP_GET_ACHIEVEMENT", uIDParameter);
        }
    
        public virtual ObjectResult<USP_GET_COUNTER_Result> USP_GET_COUNTER(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_COUNTER_Result>("USP_GET_COUNTER", uIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_GUILD_ACTION(Nullable<int> uID, Nullable<int> gUILDID, Nullable<int> gUILDACTION, Nullable<int> gUILDVALUE, Nullable<int> gUILDVALUE2, string gUILDVALUE3)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gUILDIDParameter = gUILDID.HasValue ?
                new ObjectParameter("GUILDID", gUILDID) :
                new ObjectParameter("GUILDID", typeof(int));
    
            var gUILDACTIONParameter = gUILDACTION.HasValue ?
                new ObjectParameter("GUILDACTION", gUILDACTION) :
                new ObjectParameter("GUILDACTION", typeof(int));
    
            var gUILDVALUEParameter = gUILDVALUE.HasValue ?
                new ObjectParameter("GUILDVALUE", gUILDVALUE) :
                new ObjectParameter("GUILDVALUE", typeof(int));
    
            var gUILDVALUE2Parameter = gUILDVALUE2.HasValue ?
                new ObjectParameter("GUILDVALUE2", gUILDVALUE2) :
                new ObjectParameter("GUILDVALUE2", typeof(int));
    
            var gUILDVALUE3Parameter = gUILDVALUE3 != null ?
                new ObjectParameter("GUILDVALUE3", gUILDVALUE3) :
                new ObjectParameter("GUILDVALUE3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GUILD_ACTION", uIDParameter, gUILDIDParameter, gUILDACTIONParameter, gUILDVALUEParameter, gUILDVALUE2Parameter, gUILDVALUE3Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_GUILD_CANCELJOIN(Nullable<int> uID, Nullable<int> gUILDID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gUILDIDParameter = gUILDID.HasValue ?
                new ObjectParameter("GUILDID", gUILDID) :
                new ObjectParameter("GUILDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GUILD_CANCELJOIN", uIDParameter, gUILDIDParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> USP_GUILD_CREATE(Nullable<int> uID, string gUILDNAME, string gUILDINTRO)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gUILDNAMEParameter = gUILDNAME != null ?
                new ObjectParameter("GUILDNAME", gUILDNAME) :
                new ObjectParameter("GUILDNAME", typeof(string));
    
            var gUILDINTROParameter = gUILDINTRO != null ?
                new ObjectParameter("GUILDINTRO", gUILDINTRO) :
                new ObjectParameter("GUILDINTRO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("USP_GUILD_CREATE", uIDParameter, gUILDNAMEParameter, gUILDINTROParameter);
        }
    
        public virtual ObjectResult<USP_GUILD_EMBLEM_Result> USP_GUILD_EMBLEM(Nullable<int> uID, Nullable<int> gUILDID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gUILDIDParameter = gUILDID.HasValue ?
                new ObjectParameter("GUILDID", gUILDID) :
                new ObjectParameter("GUILDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GUILD_EMBLEM_Result>("USP_GUILD_EMBLEM", uIDParameter, gUILDIDParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> USP_GUILD_JOIN(Nullable<int> uID, Nullable<int> gUILDID, string iNTRO)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gUILDIDParameter = gUILDID.HasValue ?
                new ObjectParameter("GUILDID", gUILDID) :
                new ObjectParameter("GUILDID", typeof(int));
    
            var iNTROParameter = iNTRO != null ?
                new ObjectParameter("INTRO", iNTRO) :
                new ObjectParameter("INTRO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("USP_GUILD_JOIN", uIDParameter, gUILDIDParameter, iNTROParameter);
        }
    
        public virtual ObjectResult<USP_INVEN_POP_Result> USP_INVEN_POP(Nullable<int> uID, Nullable<int> iNV_ID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iNV_IDParameter = iNV_ID.HasValue ?
                new ObjectParameter("INV_ID", iNV_ID) :
                new ObjectParameter("INV_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_INVEN_POP_Result>("USP_INVEN_POP", uIDParameter, iNV_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_INVEN_PUSH(Nullable<int> uID, Nullable<int> tYPEID, string nAME, Nullable<int> fROM_ID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var tYPEIDParameter = tYPEID.HasValue ?
                new ObjectParameter("TYPEID", tYPEID) :
                new ObjectParameter("TYPEID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var fROM_IDParameter = fROM_ID.HasValue ?
                new ObjectParameter("FROM_ID", fROM_ID) :
                new ObjectParameter("FROM_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_INVEN_PUSH", uIDParameter, tYPEIDParameter, nAMEParameter, fROM_IDParameter);
        }
    
        public virtual ObjectResult<USP_LOGIN_SERVER_Result> USP_LOGIN_SERVER(string user, string pwd, string iPAddress, string auth1, string auth2)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var auth1Parameter = auth1 != null ?
                new ObjectParameter("Auth1", auth1) :
                new ObjectParameter("Auth1", typeof(string));
    
            var auth2Parameter = auth2 != null ?
                new ObjectParameter("Auth2", auth2) :
                new ObjectParameter("Auth2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LOGIN_SERVER_Result>("USP_LOGIN_SERVER", userParameter, pwdParameter, iPAddressParameter, auth1Parameter, auth2Parameter);
        }
    
        public virtual ObjectResult<USP_LOGIN_SERVER_US_Result> USP_LOGIN_SERVER_US(string user, string pwd, string iPAddress, string auth1, string auth2)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var auth1Parameter = auth1 != null ?
                new ObjectParameter("Auth1", auth1) :
                new ObjectParameter("Auth1", typeof(string));
    
            var auth2Parameter = auth2 != null ?
                new ObjectParameter("Auth2", auth2) :
                new ObjectParameter("Auth2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LOGIN_SERVER_US_Result>("USP_LOGIN_SERVER_US", userParameter, pwdParameter, iPAddressParameter, auth1Parameter, auth2Parameter);
        }
    
        public virtual ObjectResult<string> USP_MAIL_UPDATE(Nullable<int> uID, string iTEMSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMSTRParameter = iTEMSTR != null ?
                new ObjectParameter("ITEMSTR", iTEMSTR) :
                new ObjectParameter("ITEMSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_MAIL_UPDATE", uIDParameter, iTEMSTRParameter);
        }
    
        public virtual ObjectResult<USP_MESSENGER_1PLAYER_GUILD_Result> USP_MESSENGER_1PLAYER_GUILD(Nullable<int> uID, Nullable<int> gUILDID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gUILDIDParameter = gUILDID.HasValue ?
                new ObjectParameter("GUILDID", gUILDID) :
                new ObjectParameter("GUILDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MESSENGER_1PLAYER_GUILD_Result>("USP_MESSENGER_1PLAYER_GUILD", uIDParameter, gUILDIDParameter);
        }
    
        public virtual ObjectResult<USP_MESSENGER_LOGIN_Result> USP_MESSENGER_LOGIN(Nullable<int> uID, string nICKNAME)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var nICKNAMEParameter = nICKNAME != null ?
                new ObjectParameter("NICKNAME", nICKNAME) :
                new ObjectParameter("NICKNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MESSENGER_LOGIN_Result>("USP_MESSENGER_LOGIN", uIDParameter, nICKNAMEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_MESSENGER_PLAYER_GUILD(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_MESSENGER_PLAYER_GUILD", uIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_NICKNAME_CHECK(string nICKNAME)
        {
            var nICKNAMEParameter = nICKNAME != null ?
                new ObjectParameter("NICKNAME", nICKNAME) :
                new ObjectParameter("NICKNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_NICKNAME_CHECK", nICKNAMEParameter);
        }
    
        public virtual int USP_QUEST_ALTER(Nullable<int> uID, Nullable<int> counterTypeID, Nullable<int> addQuantity)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var counterTypeIDParameter = counterTypeID.HasValue ?
                new ObjectParameter("CounterTypeID", counterTypeID) :
                new ObjectParameter("CounterTypeID", typeof(int));
    
            var addQuantityParameter = addQuantity.HasValue ?
                new ObjectParameter("AddQuantity", addQuantity) :
                new ObjectParameter("AddQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QUEST_ALTER", uIDParameter, counterTypeIDParameter, addQuantityParameter);
        }
    
        public virtual ObjectResult<string> USP_SAVE_CADDIE(Nullable<int> uID, string iTEMSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMSTRParameter = iTEMSTR != null ?
                new ObjectParameter("ITEMSTR", iTEMSTR) :
                new ObjectParameter("ITEMSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_SAVE_CADDIE", uIDParameter, iTEMSTRParameter);
        }
    
        public virtual ObjectResult<string> USP_SAVE_CARD(Nullable<int> uID, string iTEMSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMSTRParameter = iTEMSTR != null ?
                new ObjectParameter("ITEMSTR", iTEMSTR) :
                new ObjectParameter("ITEMSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_SAVE_CARD", uIDParameter, iTEMSTRParameter);
        }
    
        public virtual ObjectResult<string> USP_SAVE_CARD_EQUIP(Nullable<int> uID, string iTEMSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMSTRParameter = iTEMSTR != null ?
                new ObjectParameter("ITEMSTR", iTEMSTR) :
                new ObjectParameter("ITEMSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_SAVE_CARD_EQUIP", uIDParameter, iTEMSTRParameter);
        }
    
        public virtual int USP_SAVE_CHARACTER_EQUIP(Nullable<int> uID, string eQUIPSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var eQUIPSTRParameter = eQUIPSTR != null ?
                new ObjectParameter("EQUIPSTR", eQUIPSTR) :
                new ObjectParameter("EQUIPSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_SAVE_CHARACTER_EQUIP", uIDParameter, eQUIPSTRParameter);
        }
    
        public virtual int USP_SAVE_CHARACTER_STATS(Nullable<int> uID, string iTEMSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMSTRParameter = iTEMSTR != null ?
                new ObjectParameter("ITEMSTR", iTEMSTR) :
                new ObjectParameter("ITEMSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_SAVE_CHARACTER_STATS", uIDParameter, iTEMSTRParameter);
        }
    
        public virtual int USP_SAVE_ITEM(Nullable<int> uID, string iTEMSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMSTRParameter = iTEMSTR != null ?
                new ObjectParameter("ITEMSTR", iTEMSTR) :
                new ObjectParameter("ITEMSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_SAVE_ITEM", uIDParameter, iTEMSTRParameter);
        }
    
        public virtual ObjectResult<string> USP_SAVE_MASCOT(Nullable<int> uID, string iTEMSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMSTRParameter = iTEMSTR != null ?
                new ObjectParameter("ITEMSTR", iTEMSTR) :
                new ObjectParameter("ITEMSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_SAVE_MASCOT", uIDParameter, iTEMSTRParameter);
        }
    
        public virtual ObjectResult<string> USP_SAVE_TOOLBAR(Nullable<int> uID, string iTEMSTR)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMSTRParameter = iTEMSTR != null ?
                new ObjectParameter("ITEMSTR", iTEMSTR) :
                new ObjectParameter("ITEMSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_SAVE_TOOLBAR", uIDParameter, iTEMSTRParameter);
        }
    
        public virtual ObjectResult<USP_UCC_REQUEST_UPLOAD_Result> USP_UCC_REQUEST_UPLOAD(Nullable<int> uID, Nullable<int> iTEMID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var iTEMIDParameter = iTEMID.HasValue ?
                new ObjectParameter("ITEMID", iTEMID) :
                new ObjectParameter("ITEMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_UCC_REQUEST_UPLOAD_Result>("USP_UCC_REQUEST_UPLOAD", uIDParameter, iTEMIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> WEB_GUILD_CHECK(Nullable<int> uID, Nullable<int> gUILDID, Nullable<int> eMBLEM_IDX, string eMBLEM)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gUILDIDParameter = gUILDID.HasValue ?
                new ObjectParameter("GUILDID", gUILDID) :
                new ObjectParameter("GUILDID", typeof(int));
    
            var eMBLEM_IDXParameter = eMBLEM_IDX.HasValue ?
                new ObjectParameter("EMBLEM_IDX", eMBLEM_IDX) :
                new ObjectParameter("EMBLEM_IDX", typeof(int));
    
            var eMBLEMParameter = eMBLEM != null ?
                new ObjectParameter("EMBLEM", eMBLEM) :
                new ObjectParameter("EMBLEM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("WEB_GUILD_CHECK", uIDParameter, gUILDIDParameter, eMBLEM_IDXParameter, eMBLEMParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> WEB_UCC_CHECK(Nullable<int> uID, string uCCKEY, Nullable<int> iTEMID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var uCCKEYParameter = uCCKEY != null ?
                new ObjectParameter("UCCKEY", uCCKEY) :
                new ObjectParameter("UCCKEY", typeof(string));
    
            var iTEMIDParameter = iTEMID.HasValue ?
                new ObjectParameter("ITEMID", iTEMID) :
                new ObjectParameter("ITEMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("WEB_UCC_CHECK", uIDParameter, uCCKEYParameter, iTEMIDParameter);
        }
    }
}
